#! /usr/bin/env stap

global ptr2bt
global ptr2size
global bt_stats

probe begin {
	println("aos memory leak check ");
}

probe process(@1).function("krhino_mm_alloc_hook"){
	if (pid() == target()) {
        //print_ubacktrace()
        ptr = $mem
        bt = sprint_ubacktrace()
        ptr2bt[ptr] = bt
        ptr2size[ptr] = $size
        bt_stats[bt] <<< $size
    }
}

probe process(@1).function("krhino_mm_free") {
     if (pid() == target()) {
        ptr = $ptr

        bt = ptr2bt[ptr]
        delete ptr2bt[ptr]

        bytes = ptr2size[ptr]
        delete ptr2size[ptr]

        bt_stats[bt] <<< -bytes
        if (@sum(bt_stats[bt]) == 0) {
            delete bt_stats[bt]
        }
    }
}

probe end {
	println("\n******aos memory leak backtrace start******");
	foreach (bt in bt_stats) {
        print_ustack(bt)
        printf("\t%d\n\n", @sum(bt_stats[bt]))
    }
    println("\n******aos memory leak backtrace end******");
	delete ptr2bt
    delete ptr2size
}
